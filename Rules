#!/usr/bin/env ruby

require './environment'
require 'compass'

Compass.add_project_configuration 'compass.rb'

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/css/partials/_*/' do
  # don't compile partials
end

compile '/css/modules/_*/' do
  # don't compile modules
end

compile '/css/*/' do
  filter :sass, Compass.sass_engine_options
  filter :relativize_paths, :type => :css

  if $use_minified_css then
    # compress CSS :)
    filter :rainpress
  end
end

compile '/js/*/' do
  if $use_minified_js then
    filter :uglify_js
  end
end

compile '/feed_private/' do
  filter :erb
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb

    if item[:extension] == 'markdown'
      filter :kramdown
    end

    if item[:kind] == 'article' && ($include_drafts or item[:published]) then
      layout 'article'
    end

    layout 'default'

    filter :rubypants
    filter :relativize_paths, :type => :html
    
  end
end

route '/css/partials/_*/' do
  nil
end

route '/css/modules/_*/' do
  nil
end

route '/css/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.css'
end

route '/js/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.js'
end

route '/feed_private/' do
  item.identifier + 'index.xml'
end

route '/posts/*/' do
  if item[:kind] == 'article'
    if $include_drafts or item[:published] then
      # Route blog posts to the root of the blog
      item.identifier[6..-2] + '/index.html'
    end
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
